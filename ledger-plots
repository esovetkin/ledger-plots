#!/usr/bin/env Rscript

#' check if R_LIBS_USER writable
#' @param path directory path
check.writable <- function(path) {
  # check if writable
  tryCatch(dir.create(paste0(path,"/ledger-plots.dummy")),
           warning = function(w) {return(FALSE)},
           finally = {unlink(paste0(path,"/ledger-plots.dummy"),
                             recursive = TRUE)})
}

#' Install missing packages for this script
install.missing.packages <- function() {
  # default mirror
  mirror <- "https://cloud.r-project.org/"

  # check that R_LIBS_USER directory is writable
  if (!check.writable(Sys.getenv("R_LIBS_USER"))) {
    stop(paste("Directory",Sys.getenv("R_LIBS_USER"),
               "is not writable (configure Renviron (/etc/Renviron))."))
  }

  # argument parsing
  if (!require("optparse")) install.packages("optparse", repo = mirror)


  # devtools for installing ledgerplots package
  if (!require("devtools")) install.packages("devtools", repo = mirror)

  # install ledger-plots
  require("devtools")
  install_github("esovetkin/ledger-plots/ledgerplots")

  # install ggplot2
  if (!require("ggplot2")) install.packages("ggplot2", repo = mirror)
  if (!require("gridExtra")) install.packages("gridExtra", repo = mirror)
}

# to install missing dependencies
if (any(c("--install-dependencies","-u") %in% commandArgs(trailingOnly = TRUE))) {
  install.missing.packages()
}

# parse arguments
if (!require("optparse", quietly = TRUE)) {
  stop("optparse R-package is missing! Use -u,--install-dependencies")
}
require("optparse", quietly = TRUE)

# available options
option_list <- list(
  make_option(c("-o","--output"), type="character", default="ledger.pdf",
              help = "output pdf file name", metavar="character"),
  make_option(c("-q","--queries"), type="character", default=NULL,
              help = paste0("Query in a ledger query syntax. Multiple queries are ",
                            "separated by ';;'. All plots for each query are ",
                            "generated separately one after another."),
              metavar="character"),
  make_option(c("-f","--functions"), type="character",
              default="cumsum",
              help = paste0("Function (statistic) applied to each of the transaction vectors. ",
                            "Multiple functions are separated by ';;' correspondingly to the queries. ",
                            "This argument can be any R-function (e.g. cumsum, monthly). Default: %default"),
              metavar="character"),
  make_option(c("--order-function"), type="character",
              default="function(x) sum(abs(x))",
              help = "Function that specifies how to order the plots. Default: %default",
              metavar="character"),
  make_option(c("--no-depth-order"), action = "store_false",
              default = TRUE,
              help = paste0("Do not sort plots by depth. Plots are ordered only ",
                            "wrt --order-function. Default: %default")),
  make_option(c("-n","--number-of-plots"),
              type="numeric", default = Inf,
              help = paste0("Maximum number of plots per query. Default: %default ")),
  make_option(c("-l","--ledger-options"), type="character",
              default=NULL,
              help = "String with extra options passed to ledger",
              metavar="character"),
  make_option(c("--ledger-bin-path"), type="character", default=NULL,
              help = "Specify path to the ledger executable file",
              metavar="character"),
  make_option(c("-u","--install-dependencies"), action = "store_true", default = FALSE,
              help = paste0("Install missing dependencies. It also updates ",
                            "ledgerplots package. Default: %default")),
  make_option(c("--output-pdf-ncol"),
              type="numeric", default = 2,
              help = paste0("Number of plots columns on one page. Default: %default ")),
  make_option(c("--output-pdf-nrow"),
              type="numeric", default = 2,
              help = paste0("Number of plots rows on one page. Default: %default ")),
  make_option(c("--output-pdf-width"),
              type="numeric", default = 13,
              help = paste0("Page width (in inches). Default: %default ")),
  make_option(c("--output-pdf-height"),
              type="numeric", default = 7,
              help = paste0("Page height (in inches). Default: %default "))
)

opt_parser <- OptionParser(option_list = option_list,
                           prog = "ledger-plots",
                           description =
                             paste0("\n\n",
                                    "Using ledger get and plot transactions to a pdf file. \n",
                                    "You may specify the query in -q options. The program plots \n",
                                    "the daily value of the function evaluated on the transactions. \n",
                                    "The function can be specified in -f option.\n\n",
                                    "Multiple plots are ordered with respect to the depth of the \n",
                                    "account names (e.g. Assets:Cash has depth 2) and function \n",
                                    "evaluated on transactions vector (--order-function argument).\n\n",
                                    "Extra option to be passed to ledger may be specified using the \n",
                                    "--ledger-options argument.\n\n",
                                    "In case your ledger executable file is located in a non-$PATH directory \n",
                                    "then you can specify the correct path with --ledger-bin-path argument.\n\n",
                                    "You can install missing R-package dependencies using the \n",
                                    "--install-dependencies argument. This also updates the \n",
                                    "ledgerplots R-package.\n\n"),
                           epilogue =
                             paste0("Examples:\n\n",
                                    "Install dependencies and update ledgerplots R-package:\n",
                                    "ledger-plots -u\n\n",
                                    "Generate plot for assets:\n",
                                    "ledger-plots -q \"^assets: -X EUR\" -f \"cumsum\"\n\n"))
opt <- parse_args(opt_parser)

# in case there are some queries, plot them
if (! is.null(opt$queries)) {

  if (!require("ledgerplots", quietly = TRUE)) {
    stop("ledgerplots R-package is missing! Use -u,--install-dependencies")
  }
  require("ledgerplots", quietly = TRUE)

  # split on queries and functions
  q <- unlist(strsplit(opt$queries,split=";;"))
  f <- unlist(strsplit(opt$functions,split=";;"))

  # make functions the same length
  if (length(f) < length(q)) {
    f <- f[(1:length(q) - 1) %% length(f) + 1]
  }

  require("ggplot2", quietly = TRUE)

  # make plot for each query
  plots <- lapply(1:length(q), function(i) {
    query.plot(q[i],
               order.depth = opt$"no-depth-order",
               order.function = function(x)
                 do.call(eval(parse(text=opt$"order-function")),args=list(x)),
               max.num.plots = opt$"number-of-plots",
               ledger.options = opt$"ledger-options",
               ledger.path = opt$"ledger-bin-path",
               FUN=function(x)
                 do.call(eval(parse(text=f[i])),args=list(x)))
  })

  # remove recursive lists
  plots <- unlist(plots, recursive = FALSE)

  cat(paste("Saving plots to",opt$output,"\n"))
  # workaround due to the blank page
  plots <- lapply(plots, ggplotGrob)

  require("gridExtra", quietly = TRUE)
  plots <- marrangeGrob(plots,
                        nrow=opt$"output-pdf-nrow",
                        ncol=opt$"output-pdf-ncol",
                        top=NULL)
  ggsave(opt$output, plots,
         width = opt$"output-pdf-width",
         height = opt$"output-pdf-height")
}
